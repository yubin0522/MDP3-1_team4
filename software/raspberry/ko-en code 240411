import threading
import time
import speech_recognition as sr
from gtts import gTTS
import os
import playsound
from translate import Translator

def speak(text, lang='ko'):
    tts = gTTS(text=text, lang=lang)
    filename = 'voice.mp3'
    tts.save(filename)
    playsound.playsound(filename)
    os.remove(filename)

def get_audio():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Say something...")
        # 음성 입력을 받기 전에 짧은 시간동안 대기
        time.sleep(0.5)
        audio = r.listen(source)
        try:
            text = r.recognize_google(audio, language="ko-KR")
            print("You said: ", text)
            return text
        except Exception as e:
            print("Exception: " + str(e))
            return None

def translate_and_speak(text):
    translator = Translator(from_lang="ko", to_lang="en")
    translation = translator.translate(text)
    print("Translation: ", translation)
    speak(translation, lang='en')

def main():
    # 번역 및 음성 출력 작업을 별도의 스레드에서 실행
    def translate_and_speak_thread(text):
        translate_and_speak(text)

    # 음성 입력을 받는 스레드 생성
    def listen_for_audio():
        text = get_audio()
        if text:
            # 번역 및 음성 출력 스레드 시작
            translate_thread = threading.Thread(target=translate_and_speak_thread, args=(text,))
            translate_thread.start()

    # 음성 입력 스레드 시작
    audio_thread = threading.Thread(target=listen_for_audio)
    audio_thread.start()

    # "번역 시작하겠습니다" 메시지 출력
    speak("번역 시작하겠습니다")

if __name__ == "__main__":
    main()
